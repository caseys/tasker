/*! tasker 15-08-2014 */
var tasker=function(){{var a=0,b="ontouchstart"in document.documentElement,c=this.TaskView=React.createClass({displayName:"TaskView",getInitialState:function(){return{text:this.props.task.text,editing:""===this.props.task.text,trashed:this.props.task.trashed||!1}},componentDidMount:function(){if(this.state.editing===!0){var a=this;setTimeout(function(){a.setFocus()},50)}},setFocus:function(){var a=this.refs.taskInput.getDOMNode();a.focus(),a.setSelectionRange(0,a.value.length)},goEditState:function(){this.setState({editing:!0},this.setFocus)},goReadState:function(){this.state.text&&this.state.text===this.props.task.text||this.props.editTask(this.props.task,{text:this.state.text}),this.setState({editing:!1})},setChecked:function(a){var b=a.target.checked;this.setState({checked:b}),this.props.editTask(this.props.task,{checked:b})},setTrashed:function(){var a=!this.state.trashed;this.setState({trashed:a}),this.props.editTask(this.props.task,{trashed:a}),this.goReadState()},handleKeyDown:function(a){if(27===a.which)this.setState({text:this.props.task.text}),this.goReadState();else if(13===a.which){var b=this.refs.taskInput.getDOMNode();b.blur()}},handleChange:function(a){this.setState({text:a.target.value})},handleBlur:function(){this.goReadState()},handleTouch:function(b){var c=+new Date;a+500>c&&(b.preventDefault(),this.goEditState()),a=c},handleCheckTouch:function(a){a.preventDefault();var b=this.refs.taskCheck.getDOMNode();b.checked=!b.checked},render:function(){var a,c=this.props.task,d=React.addons.classSet,e=d({task:!0,edit:this.state.editing,active:!this.props.task.checked,trashed:this.state.trashed});return a=b?"taskTrash taskTrashTouch":"taskTrash",React.DOM.div({className:e,onTouchStart:this.handleTouch,onDoubleClick:this.goEditState},React.DOM.input({type:"checkbox",ref:"taskCheck",className:"taskCheck",checked:this.props.task.checked,onChange:this.setChecked,onTouchStart:this.handleCheckTouch}),React.DOM.span({className:"taskText"},c.text),React.DOM.input({type:"text",ref:"taskInput",className:"taskInput",autofocus:"true",placeholder:"enter task text",value:this.state.text,onBlur:this.handleBlur,onChange:this.handleChange,onKeyDown:this.handleKeyDown}),React.DOM.input({type:"button",ref:"taskTrash",className:a,onClick:this.setTrashed}))}});this.TaskerView=React.createClass({displayName:"TaskerView",getInitialState:function(){return{filter:"all"}},setAllFilter:function(){this.setState({filter:"all"})},setActiveFilter:function(){this.setState({filter:"active"})},setTrashedFilter:function(){this.setState({filter:"trashed"})},emptyTrash:function(){this.props.taskData.removeTrashed(),this.setState({filter:"all"})},shareTasks:function(){var a=window.location.href+"#"+this.props.taskData.shareHash();prompt("Share this URL",a)},handleNewTask:function(){this.props.taskData.addTask("")},handleEditTask:function(a,b){this.props.taskData.editTask(a,b)},render:function(){React.initializeTouchEvents(!0);var a,b=this.props.taskData.tasks.map(function(a){return c({key:a.id,task:a,editTask:this.handleEditTask})},this),d=this.props.taskData.getNumTrashed(),e=this.props.taskData.getNumActive(),f=this.props.taskData.tasks.length-d,g=null;d&&(g=React.DOM.span({className:"filterButton trash",onClick:this.setTrashedFilter},"trash (",d,")")),f?a=React.DOM.span({className:"shareLink",onClick:this.shareTasks},"share"):"trashed"!==this.state.filter&&this.props.taskData.addTask("",!1);var h=React.addons.classSet,i=h({taskerApp:!0,filterAll:"all"===this.state.filter,filterActive:"active"===this.state.filter,filterTrashed:"trashed"===this.state.filter});return React.DOM.div({className:i},React.DOM.div({className:"header"},React.DOM.button({className:"taskAdd",onClick:this.handleNewTask},"+"),React.DOM.button({className:"emptyTrash",onClick:this.emptyTrash},"empty trash"),React.DOM.span(null,"tasks")),React.DOM.div({className:"taskList"},b),React.DOM.div({className:"taskFilter"},a,React.DOM.label(null,"showing: "),React.DOM.span({className:"filterButton all",onClick:this.setAllFilter},"all (",f,")"),React.DOM.span({className:"filterButton active",onClick:this.setActiveFilter},"active (",e,")"),g))}})}};tasker.prototype.data={},tasker.prototype.setData=function(a){this.data=a},tasker.prototype.render=function(){var a=this.TaskerView;React.renderComponent(a({taskData:this.data}),document.body)};var taskModel=function(a){this.id=a.id,this.text=a.text,this.checked=a.checked||!1,this.trashed=a.trashed||!1},taskerData=function(){this.listeners={},this.storageNamespace="tasker";var a,b=JSON.parse(localStorage.getItem(this.storageNamespace)||!1);try{a=JSON.parse(decodeURIComponent(String(window.location.hash).replace(/^#+/,""))||!1),window.location.hash=""}catch(c){a=!1}if(a&&b&&confirm("Shared tasks will be merged into the existing task last.")){for(var d={},e=0;e<b.length;e++)d[b[e].key]=e;for(e=0;e<a.length;e++){var f=d[a[e].key];"undefined"!=typeof f?b[f]=a[e]:b.push(a[e])}}else a&&!b&&(b=a);this.tasks=b||[{id:1,text:"Climb Mount Fuji",checked:!1,trashed:!1},{id:2,text:"Reschedule beer committee meeting",checked:!1,trashed:!1},{id:3,text:"Get almond milk on the way home",checked:!0,trashed:!1},{id:4,text:"Create a task list app",checked:!0,trashed:!0}]};taskerData.prototype.addTask=function(a,b){var c=new taskModel({id:this.getUid(),text:a,checked:!1},this);this.tasks.unshift(c),this.saveTasks(b)},taskerData.prototype.removeTask=function(a){this.tasks.splice(this.tasks.indexOf(a),1)},taskerData.prototype.removeTrashed=function(a){this.tasks=this.tasks.filter(function(a){return a.trashed===!0?!1:!0}),this.saveTasks(a)},taskerData.prototype.addListener=function(a){this.listeners[a]=a},taskerData.prototype.broadcastChanges=function(){for(var a in this.listeners)this.listeners[a]()},taskerData.prototype.shareHash=function(){var a=JSON.stringify(this.tasks);return encodeURIComponent(a)},taskerData.prototype.saveTasks=function(a){var b=JSON.stringify(this.tasks);localStorage.setItem(this.storageNamespace,b),a!==!1&&this.broadcastChanges()},taskerData.prototype.editTask=function(a,b){for(var c in b)a[c]=b[c];""===a.text.trim()&&this.removeTask(a),this.saveTasks()},taskerData.prototype.filterTasks=function(a,b){return"undefined"==typeof b&&(b=!0),this.tasks.filter(function(c){return c[a]==b?!0:void 0})},taskerData.prototype.getNumTrashed=function(){return this.filterTasks("trashed").length},taskerData.prototype.getNumActive=function(){var a=this.filterTasks("trashed",!1),b=a.filter(function(a){return a.checked!==!0});return b.length},taskerData.prototype.getUid=function(){return"xyxy-xxxx-yyyy".replace(/[xy]/g,function(a){var b=16*Math.random()|0,c="x"==a?b:3&b|8;return c.toString(16)})};